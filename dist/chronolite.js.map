{"version":3,"file":"chronolite.js","sources":["../chronolite.js"],"sourcesContent":["\nexport default class chronolite {\n\n\tconstructor() {\n\t\tthis.defaultIterations = 20;\n\t}\n\n\tvalidInput(obj) {\n\n\t\tconst objStr = JSON.stringify(obj);\n\t\tif (obj === undefined) {\n\t\t\treturn [false, \"passed object is undefined: \" + objStr];\n\t\t}\n\t\tif (obj.fn === undefined) {\n\t\t\treturn [false, \"function (fn) is undefined: \" + objStr];\n\t\t}\n\t\tif (obj.fnArgs !== undefined && !Array.isArray(obj.fnArgs)) {\n\t\t\treturn [false, \"function args (fnArgs) is not an array: \" + objStr];\n\t\t}\n\t\tif (obj.binding !== undefined && typeof obj.binding !== obj) {\n\t\t\treturn [false, \"binding is defined but not an object : \" + objStr];\n\t\t}\n\t\treturn [true, \"\"];\n\n\t}\n\n\t// Time code\n\n\t_setup(fnToTime) {\n\t\tconst valid = this.validInput(fnToTime);\n\n\t\tif (!valid[0]) {\n\t\t\tthrow Error(valid[1]);\n\t\t}\n\t\t\n\t\tfnToTime.binding = (fnToTime.binding === undefined) ? null : fnToTime.binding;\n\t}\n\n\t_emptyTimeResult() {\n\t\treturn {\n\t\t\ttotalTime: 0,\n\t\t\taverageTime: Infinity,\n\t\t\tfastestTime: Infinity,\n\t\t\tslowestTime: -Infinity,\n\t\t};\n\t}\n\n\t_compareTimes(iterationTime, result) {\n\t\tif (iterationTime < result.fastestTime) {\n\t\t\tresult.fastestTime = iterationTime;\n\t\t}\n\t\tif (iterationTime > result.slowestTime) {\n\t\t\tresult.slowestTime = iterationTime;\n\t\t}\n\n\t\tresult.totalTime += iterationTime;\n\t}\n\n\ttime(fnToTime, iterations) {\n\n\t\titerations = iterations || this.defaultIterations;\n\t\tthis._setup(fnToTime);\n\t\tconst result = this._emptyTimeResult();\n\n\t\tfor (let i = 0; i < iterations; i++) {\n\n\t\t\tconst start = new Date();\n\t\t\tfnToTime.fn.apply(fnToTime.binding, fnToTime.fnArgs);\n\t\t\tconst end = new Date();\n\n\t\t\tconst iterationTime = end - start;\n\t\t\tthis._compareTimes(iterationTime, result);\n\n\t\t}\n\n\t\tresult.averageTime = result.totalTime / iterations;\n\n\t\treturn result;\n\n\t}\n\n\tasync timeAsync(fnToTime, iterations) {\n\t\t\n\t\titerations = iterations || this.defaultIterations;\n\t\tthis._setup(fnToTime);\n\t\tconst result = this._emptyTimeResult();\n\n\t\tfor (let i = 0; i < iterations; i++) {\n\n\t\t\tconst start = new Date();\n\t\t\tawait fnToTime.fn.apply(fnToTime.binding, fnToTime.fnArgs);\n\t\t\tconst end = new Date();\n\n\t\t\tconst iterationTime = end - start;\n\t\t\tthis._compareTimes(iterationTime, result);\n\n\t\t}\n\n\t\tresult.averageTime = result.totalTime / iterations;\n\n\t\treturn result;\n\t\n\t}\n\n\t// Comparison Code\n\n\t_handleComparison(time, result, index, objId) {\n\t\ttime.id = objId;\n\t\tif (time.averageTime < result.fastestAverageTime) {\n\t\t\tresult.fastestIndex = index;\n\t\t\tresult.fastestId = time.id;\n\t\t\tresult.fastestAverageTime = time.averageTime;\n\t\t}\n\t\tresult.timeTaken[index] = time;\n\t}\n\n\t_emptyCompareResult() {\n\t\treturn {\n\t\t\tfastestIndex: undefined,\n\t\t\tfastestId: undefined,\n\t\t\tfastestAverageTime: Infinity,\n\t\t\ttimeTaken: [],\n\t\t};\n\t}\n\n\tcompare(fnsToCompare, iterations) {\n\t\t\n\t\titerations = iterations || this.defaultIterations;\n\t\tconst result = this._emptyCompareResult();\n\t\n\t\tfor (let i =0; i < fnsToCompare.length; i++) {\n\t\t\tconst fnObj = fnsToCompare[i];\n\t\t\tconst time = this.time(fnObj, iterations);\n\t\t\tthis._handleComparison(time, result, i, fnObj.id);\n\t\t}\n\n\t\tif (result.fastestId === undefined) delete result.fastestId;\n\n\t\treturn result;\n\n\t}\n\n\tasync compareAsync(fnsToCompare, iterations) {\n\n\t\titerations = iterations || this.defaultIterations;\n\t\tconst result = this._emptyCompareResult();\n\t\n\t\tfor (let i = 0; i < fnsToCompare.length; i++) {\n\t\t\tconst fnObj = fnsToCompare[i];\n\t\t\tconst time = await this.timeAsync(fnObj, iterations);\n\t\t\tthis._handleComparison(time, result, i, fnObj.id);\n\t\t}\n\n\t\tif (result.fastestId === undefined) delete result.fastestId;\n\n\t\treturn result;\n\n\t}\n\n}"],"names":["chronolite","defaultIterations","validInput","obj","objStr","JSON","stringify","undefined","fn","fnArgs","Array","isArray","binding","_setup","fnToTime","valid","this","Error","_emptyTimeResult","Infinity","_compareTimes","iterationTime","result","fastestTime","slowestTime","totalTime","time","iterations","i","start","Date","apply","end","averageTime","timeAsync","then","_handleComparison","index","objId","id","fastestAverageTime","fastestIndex","fastestId","timeTaken","_emptyCompareResult","compare","fnsToCompare","length","fnObj","compareAsync","$await_6"],"mappings":"AACe,IAAMA,EAEpB,gBACMC,kBAAoB,gBAG1BC,oBAAWC,OAEJC,EAASC,KAAKC,UAAUH,eAClBI,IAARJ,IACK,EAAO,+BAAiCC,QAElCG,IAAXJ,EAAIK,KACC,EAAO,+BAAiCJ,QAE9BG,IAAfJ,EAAIM,QAAyBC,MAAMC,QAAQR,EAAIM,aAG/BF,IAAhBJ,EAAIS,gBAAgCT,EAAIS,UAAYT,IAC/C,EAAO,0CAA4CC,KAEpD,EAAM,MALL,EAAO,2CAA6CA,gBAW9DS,gBAAOC,OACAC,EAAQC,KAAKd,WAAWY,OAEzBC,EAAM,SACJE,MAAMF,EAAM,MAGVH,aAAgCL,IAArBO,EAASF,QAAyB,KAAOE,EAASF,qBAGvEM,6CAEa,cACEC,qBACAA,sBACCA,uBAIhBC,uBAAcC,EAAeC,GACxBD,EAAgBC,EAAOC,gBACnBA,YAAcF,GAElBA,EAAgBC,EAAOE,gBACnBA,YAAcH,KAGfI,WAAaJ,eAGrBK,cAAKZ,EAAUa,KAEDA,GAAcX,KAAKf,uBAC3BY,OAAOC,WACNQ,EAASN,KAAKE,mBAEXU,EAAI,EAAGA,EAAID,EAAYC,IAAK,KAE9BC,EAAQ,IAAIC,OACTtB,GAAGuB,MAAMjB,EAASF,QAASE,EAASL,YACvCuB,EAAM,IAAIF,UAGXV,cADiBY,EAAMH,EACMP,YAI5BW,YAAcX,EAAOG,UAAYE,EAEjCL,eAIFY,mBAAUpB,EAAUa,gDAEZA,GAAcX,KAAKf,uBAC3BY,OAAOC,KACGE,KAAKE,0BAEXU,EAAI,6MAAGA,EAAID,KAEL,IAAIG,KACZhB,EAASN,GAAGuB,MAAMjB,EAASF,QAASE,EAASL,QAAnD0B,8BACY,IAAIL,UAGXV,cADiBY,EAAMH,EACMP,gGAI5BW,YAAcX,EAAOG,UAAYE,IAEjCL,8BAMRc,2BAAkBV,EAAMJ,EAAQe,EAAOC,KACjCC,GAAKD,EACNZ,EAAKO,YAAcX,EAAOkB,uBACtBC,aAAeJ,IACfK,UAAYhB,EAAKa,KACjBC,mBAAqBd,EAAKO,eAE3BU,UAAUN,GAASX,eAG3BkB,wDAEgBrC,iBACHA,qBACSY,oCAKtB0B,iBAAQC,EAAcnB,KAERA,GAAcX,KAAKf,0BAC1BqB,EAASN,KAAK4B,sBAEXhB,EAAG,EAAGA,EAAIkB,EAAaC,OAAQnB,IAAK,KACtCoB,EAAQF,EAAalB,GACrBF,OAAYA,KAAKsB,EAAOrB,QACzBS,kBAAkBV,EAAMJ,EAAQM,EAAGoB,EAAMT,gBAGtBhC,IAArBe,EAAOoB,kBAAgCpB,EAAOoB,UAE3CpB,eAIF2B,sBAAaH,EAAcnB,8CAEnBA,GAAcX,KAAKf,oBACjBe,KAAK4B,6BAEXhB,EAAI,6MAAGA,EAAIkB,EAAaC,OAEb/B,KAAKkB,YADVY,EAAalB,GACcD,GAA5BQ,iCACRC,kBADQc,EACgB5B,EAAQM,EAAGoB,EAAMT,mGAGtBhC,IAArBe,EAAOoB,kBAAgCpB,EAAOoB,YAE3CpB"}